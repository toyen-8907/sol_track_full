{"ast":null,"code":"import { Layout } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nexport class COptionPublicKeyLayout extends Layout {\n  constructor(property) {\n    super(-1, property);\n    this.publicKeyLayout = publicKey();\n  }\n  decode(buffer, offset = 0) {\n    const option = buffer[offset];\n    if (option === 0) {\n      return null;\n    }\n    return this.publicKeyLayout.decode(buffer, offset + 1);\n  }\n  encode(src, buffer, offset = 0) {\n    if (src === null) {\n      buffer[offset] = 0;\n      return 1;\n    } else {\n      buffer[offset] = 1;\n      this.publicKeyLayout.encode(src, buffer, offset + 1);\n      return 33;\n    }\n  }\n  getSpan(buffer, offset = 0) {\n    if (buffer) {\n      const option = buffer[offset];\n      return option === 0 ? 1 : 1 + this.publicKeyLayout.span;\n    }\n    return 1 + this.publicKeyLayout.span;\n  }\n}","map":{"version":3,"names":["Layout","publicKey","COptionPublicKeyLayout","constructor","property","publicKeyLayout","decode","buffer","offset","option","encode","src","getSpan","span"],"sources":["C:\\monitor_sol_web\\solactrackmap\\node_modules\\@solana\\spl-token\\src\\serialization.ts"],"sourcesContent":["import { Layout } from '@solana/buffer-layout';\r\nimport { publicKey } from '@solana/buffer-layout-utils';\r\nimport type { PublicKey } from '@solana/web3.js';\r\n\r\nexport class COptionPublicKeyLayout extends Layout<PublicKey | null> {\r\n    private publicKeyLayout: Layout<PublicKey>;\r\n\r\n    constructor(property?: string | undefined) {\r\n        super(-1, property);\r\n        this.publicKeyLayout = publicKey();\r\n    }\r\n\r\n    decode(buffer: Uint8Array, offset: number = 0): PublicKey | null {\r\n        const option = buffer[offset];\r\n        if (option === 0) {\r\n            return null;\r\n        }\r\n        return this.publicKeyLayout.decode(buffer, offset + 1);\r\n    }\r\n\r\n    encode(src: PublicKey | null, buffer: Uint8Array, offset: number = 0): number {\r\n        if (src === null) {\r\n            buffer[offset] = 0;\r\n            return 1;\r\n        } else {\r\n            buffer[offset] = 1;\r\n            this.publicKeyLayout.encode(src, buffer, offset + 1);\r\n            return 33;\r\n        }\r\n    }\r\n\r\n    getSpan(buffer?: Uint8Array, offset: number = 0): number {\r\n        if (buffer) {\r\n            const option = buffer[offset];\r\n            return option === 0 ? 1 : 1 + this.publicKeyLayout.span;\r\n        }\r\n        return 1 + this.publicKeyLayout.span;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,SAAS,QAAQ,6BAA6B;AAGvD,OAAM,MAAOC,sBAAuB,SAAQF,MAAwB;EAGhEG,YAAYC,QAA6B;IACrC,KAAK,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC;IACnB,IAAI,CAACC,eAAe,GAAGJ,SAAS,EAAE;EACtC;EAEAK,MAAMA,CAACC,MAAkB,EAAEC,MAAA,GAAiB,CAAC;IACzC,MAAMC,MAAM,GAAGF,MAAM,CAACC,MAAM,CAAC;IAC7B,IAAIC,MAAM,KAAK,CAAC,EAAE;MACd,OAAO,IAAI;IACf;IACA,OAAO,IAAI,CAACJ,eAAe,CAACC,MAAM,CAACC,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC;EAC1D;EAEAE,MAAMA,CAACC,GAAqB,EAAEJ,MAAkB,EAAEC,MAAA,GAAiB,CAAC;IAChE,IAAIG,GAAG,KAAK,IAAI,EAAE;MACdJ,MAAM,CAACC,MAAM,CAAC,GAAG,CAAC;MAClB,OAAO,CAAC;IACZ,CAAC,MAAM;MACHD,MAAM,CAACC,MAAM,CAAC,GAAG,CAAC;MAClB,IAAI,CAACH,eAAe,CAACK,MAAM,CAACC,GAAG,EAAEJ,MAAM,EAAEC,MAAM,GAAG,CAAC,CAAC;MACpD,OAAO,EAAE;IACb;EACJ;EAEAI,OAAOA,CAACL,MAAmB,EAAEC,MAAA,GAAiB,CAAC;IAC3C,IAAID,MAAM,EAAE;MACR,MAAME,MAAM,GAAGF,MAAM,CAACC,MAAM,CAAC;MAC7B,OAAOC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAACJ,eAAe,CAACQ,IAAI;IAC3D;IACA,OAAO,CAAC,GAAG,IAAI,CAACR,eAAe,CAACQ,IAAI;EACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}