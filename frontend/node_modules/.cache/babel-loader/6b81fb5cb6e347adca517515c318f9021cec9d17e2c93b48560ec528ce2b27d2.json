{"ast":null,"code":"import { addCodecSizePrefix, getU32Codec, getUtf8Codec, getStructCodec, getTupleCodec, getUnitCodec } from '@solana/codecs';\nexport var Field;\n(function (Field) {\n  Field[Field[\"Name\"] = 0] = \"Name\";\n  Field[Field[\"Symbol\"] = 1] = \"Symbol\";\n  Field[Field[\"Uri\"] = 2] = \"Uri\";\n})(Field || (Field = {}));\nexport const getFieldCodec = () => [['Name', getUnitCodec()], ['Symbol', getUnitCodec()], ['Uri', getUnitCodec()], ['Key', getStructCodec([['value', getTupleCodec([addCodecSizePrefix(getUtf8Codec(), getU32Codec())])]])]];\nexport function getFieldConfig(field) {\n  if (field === Field.Name || field === 'Name' || field === 'name') {\n    return {\n      __kind: 'Name'\n    };\n  } else if (field === Field.Symbol || field === 'Symbol' || field === 'symbol') {\n    return {\n      __kind: 'Symbol'\n    };\n  } else if (field === Field.Uri || field === 'Uri' || field === 'uri') {\n    return {\n      __kind: 'Uri'\n    };\n  } else {\n    return {\n      __kind: 'Key',\n      value: [field]\n    };\n  }\n}","map":{"version":3,"names":["addCodecSizePrefix","getU32Codec","getUtf8Codec","getStructCodec","getTupleCodec","getUnitCodec","Field","getFieldCodec","getFieldConfig","field","Name","__kind","Symbol","Uri","value"],"sources":["C:\\monitor_sol_web\\solactrackmap\\node_modules\\@solana\\spl-token-metadata\\src\\field.ts"],"sourcesContent":["import type { Codec } from '@solana/codecs';\r\nimport {\r\n    addCodecSizePrefix,\r\n    getU32Codec,\r\n    getUtf8Codec,\r\n    getStructCodec,\r\n    getTupleCodec,\r\n    getUnitCodec,\r\n} from '@solana/codecs';\r\n\r\nexport enum Field {\r\n    Name,\r\n    Symbol,\r\n    Uri,\r\n}\r\n\r\ntype FieldLayout = { __kind: 'Name' } | { __kind: 'Symbol' } | { __kind: 'Uri' } | { __kind: 'Key'; value: [string] };\r\n\r\nexport const getFieldCodec = () =>\r\n    [\r\n        ['Name', getUnitCodec()],\r\n        ['Symbol', getUnitCodec()],\r\n        ['Uri', getUnitCodec()],\r\n        ['Key', getStructCodec([['value', getTupleCodec([addCodecSizePrefix(getUtf8Codec(), getU32Codec())])]])],\r\n    ] as const;\r\n\r\nexport function getFieldConfig(field: Field | string): FieldLayout {\r\n    if (field === Field.Name || field === 'Name' || field === 'name') {\r\n        return { __kind: 'Name' };\r\n    } else if (field === Field.Symbol || field === 'Symbol' || field === 'symbol') {\r\n        return { __kind: 'Symbol' };\r\n    } else if (field === Field.Uri || field === 'Uri' || field === 'uri') {\r\n        return { __kind: 'Uri' };\r\n    } else {\r\n        return { __kind: 'Key', value: [field] };\r\n    }\r\n}\r\n"],"mappings":"AACA,SACIA,kBAAkB,EAClBC,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,aAAa,EACbC,YAAY,QACT,gBAAgB;AAEvB,WAAYC,KAIX;AAJD,WAAYA,KAAK;EACbA,KAAA,CAAAA,KAAA,sBAAI;EACJA,KAAA,CAAAA,KAAA,0BAAM;EACNA,KAAA,CAAAA,KAAA,oBAAG;AACP,CAAC,EAJWA,KAAK,KAALA,KAAK;AAQjB,OAAO,MAAMC,aAAa,GAAGA,CAAA,KACzB,CACI,CAAC,MAAM,EAAEF,YAAY,EAAE,CAAC,EACxB,CAAC,QAAQ,EAAEA,YAAY,EAAE,CAAC,EAC1B,CAAC,KAAK,EAAEA,YAAY,EAAE,CAAC,EACvB,CAAC,KAAK,EAAEF,cAAc,CAAC,CAAC,CAAC,OAAO,EAAEC,aAAa,CAAC,CAACJ,kBAAkB,CAACE,YAAY,EAAE,EAAED,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClG;AAEd,OAAM,SAAUO,cAAcA,CAACC,KAAqB;EAChD,IAAIA,KAAK,KAAKH,KAAK,CAACI,IAAI,IAAID,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,MAAM,EAAE;IAC9D,OAAO;MAAEE,MAAM,EAAE;IAAM,CAAE;EAC7B,CAAC,MAAM,IAAIF,KAAK,KAAKH,KAAK,CAACM,MAAM,IAAIH,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,QAAQ,EAAE;IAC3E,OAAO;MAAEE,MAAM,EAAE;IAAQ,CAAE;EAC/B,CAAC,MAAM,IAAIF,KAAK,KAAKH,KAAK,CAACO,GAAG,IAAIJ,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,KAAK,EAAE;IAClE,OAAO;MAAEE,MAAM,EAAE;IAAK,CAAE;EAC5B,CAAC,MAAM;IACH,OAAO;MAAEA,MAAM,EAAE,KAAK;MAAEG,KAAK,EAAE,CAACL,KAAK;IAAC,CAAE;EAC5C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}