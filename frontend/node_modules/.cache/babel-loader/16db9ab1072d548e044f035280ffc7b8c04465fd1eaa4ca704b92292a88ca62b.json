{"ast":null,"code":"export class TokenGroupError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\n/** Thrown if size is greater than proposed max size */\nexport class SizeExceedsNewMaxSizeError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'SizeExceedsNewMaxSizeError';\n  }\n}\n/** Thrown if size is greater than max size */\nexport class SizeExceedsMaxSizeError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'SizeExceedsMaxSizeError';\n  }\n}\n/** Thrown if group is immutable */\nexport class ImmutableGroupError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'ImmutableGroupError';\n  }\n}\n/** Thrown if incorrect mint authority has signed the instruction */\nexport class IncorrectMintAuthorityError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'IncorrectMintAuthorityError';\n  }\n}\n/** Thrown if incorrect update authority has signed the instruction */\nexport class IncorrectUpdateAuthorityError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'IncorrectUpdateAuthorityError';\n  }\n}\n/** Thrown if member account is the same as the group account */\nexport class MemberAccountIsGroupAccountError extends TokenGroupError {\n  constructor() {\n    super(...arguments);\n    this.name = 'MemberAccountIsGroupAccountError';\n  }\n}","map":{"version":3,"names":["TokenGroupError","Error","constructor","message","SizeExceedsNewMaxSizeError","name","SizeExceedsMaxSizeError","ImmutableGroupError","IncorrectMintAuthorityError","IncorrectUpdateAuthorityError","MemberAccountIsGroupAccountError"],"sources":["/Users/damentp01/project/sol_track_ac/node_modules/@solana/spl-token-group/src/errors.ts"],"sourcesContent":["export class TokenGroupError extends Error {\n    constructor(message?: string) {\n        super(message);\n    }\n}\n\n/** Thrown if size is greater than proposed max size */\nexport class SizeExceedsNewMaxSizeError extends TokenGroupError {\n    name = 'SizeExceedsNewMaxSizeError';\n}\n\n/** Thrown if size is greater than max size */\nexport class SizeExceedsMaxSizeError extends TokenGroupError {\n    name = 'SizeExceedsMaxSizeError';\n}\n\n/** Thrown if group is immutable */\nexport class ImmutableGroupError extends TokenGroupError {\n    name = 'ImmutableGroupError';\n}\n\n/** Thrown if incorrect mint authority has signed the instruction */\nexport class IncorrectMintAuthorityError extends TokenGroupError {\n    name = 'IncorrectMintAuthorityError';\n}\n\n/** Thrown if incorrect update authority has signed the instruction */\nexport class IncorrectUpdateAuthorityError extends TokenGroupError {\n    name = 'IncorrectUpdateAuthorityError';\n}\n\n/** Thrown if member account is the same as the group account */\nexport class MemberAccountIsGroupAccountError extends TokenGroupError {\n    name = 'MemberAccountIsGroupAccountError';\n}\n"],"mappings":"AAAA,OAAM,MAAOA,eAAgB,SAAQC,KAAK;EACtCC,YAAYC,OAAgB;IACxB,KAAK,CAACA,OAAO,CAAC;EAClB;;AAGJ;AACA,OAAM,MAAOC,0BAA2B,SAAQJ,eAAe;EAA/DE,YAAA;;IACI,KAAAG,IAAI,GAAG,4BAA4B;EACvC;;AAEA;AACA,OAAM,MAAOC,uBAAwB,SAAQN,eAAe;EAA5DE,YAAA;;IACI,KAAAG,IAAI,GAAG,yBAAyB;EACpC;;AAEA;AACA,OAAM,MAAOE,mBAAoB,SAAQP,eAAe;EAAxDE,YAAA;;IACI,KAAAG,IAAI,GAAG,qBAAqB;EAChC;;AAEA;AACA,OAAM,MAAOG,2BAA4B,SAAQR,eAAe;EAAhEE,YAAA;;IACI,KAAAG,IAAI,GAAG,6BAA6B;EACxC;;AAEA;AACA,OAAM,MAAOI,6BAA8B,SAAQT,eAAe;EAAlEE,YAAA;;IACI,KAAAG,IAAI,GAAG,+BAA+B;EAC1C;;AAEA;AACA,OAAM,MAAOK,gCAAiC,SAAQV,eAAe;EAArEE,YAAA;;IACI,KAAAG,IAAI,GAAG,kCAAkC;EAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}