{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\nconst WebSocketComponent = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  onConnectionStatus,\n  account,\n  onMessageReceived,\n  onConnectionResult\n}) => {\n  _s();\n  const connectionRef = useRef(null);\n  useEffect(() => {\n    const RPC_ENDPOINT = process.env.REACT_APP_RPC_ENDPOINT;\n    const WS_ENDPOINT = process.env.REACT_APP_WS_ENDPOINT;\n    if (!RPC_ENDPOINT || !WS_ENDPOINT) {\n      console.error('RPC_ENDPOINT or WS_ENDPOINT is not defined in .env file.');\n      onConnectionStatus('Error');\n      return;\n    }\n\n    // 创建并存储连接\n    connectionRef.current = new Connection(RPC_ENDPOINT, {\n      commitment: 'confirmed',\n      wsEndpoint: WS_ENDPOINT\n    });\n    const connection = connectionRef.current;\n\n    // 避免直接访问内部属性，如 _rpcWebSocket\n\n    // 订阅账户变化\n    const publicKey = new PublicKey(account);\n    const subscriptionId = connection.onAccountChange(publicKey, (accountInfo, context) => {\n      const lamports = accountInfo.lamports;\n      console.log('Updated account info:', accountInfo);\n      console.log('Slot:', context.slot);\n      if (lamports !== undefined) {\n        onMessageReceived(`余额: ${lamports}`);\n      }\n      onConnectionResult(`Slot: ${context.slot}`);\n    }, 'confirmed');\n\n    // 在订阅期间处理可能的错误\n    // 您可以使用 try/catch 块来捕获异常\n\n    return () => {\n      if (connectionRef.current) {\n        connectionRef.current.removeAccountChangeListener(subscriptionId).then(() => {\n          console.log('Account change listener removed.');\n          onConnectionStatus('Disconnected');\n        }).catch(error => {\n          console.error('Error removing account change listener:', error);\n        });\n      }\n    };\n  }, [onConnectionStatus, account, onMessageReceived, onConnectionResult]);\n  return null;\n}, \"Q75jzstoj70Xl4uzOerrVl9m/vI=\")), \"Q75jzstoj70Xl4uzOerrVl9m/vI=\");\n_c2 = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"WebSocketComponent$React.memo\");\n$RefreshReg$(_c2, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Connection","PublicKey","WebSocketComponent","_s","memo","_c","onConnectionStatus","account","onMessageReceived","onConnectionResult","connectionRef","RPC_ENDPOINT","process","env","REACT_APP_RPC_ENDPOINT","WS_ENDPOINT","REACT_APP_WS_ENDPOINT","console","error","current","commitment","wsEndpoint","connection","publicKey","subscriptionId","onAccountChange","accountInfo","context","lamports","log","slot","undefined","removeAccountChangeListener","then","catch","_c2","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_ac/src/WebSocketComponent.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\n\nconst WebSocketComponent = React.memo(({ onConnectionStatus, account, onMessageReceived, onConnectionResult }) => {\n  const connectionRef = useRef(null);\n\n  useEffect(() => {\n    const RPC_ENDPOINT = process.env.REACT_APP_RPC_ENDPOINT;\n    const WS_ENDPOINT = process.env.REACT_APP_WS_ENDPOINT;\n\n    if (!RPC_ENDPOINT || !WS_ENDPOINT) {\n      console.error('RPC_ENDPOINT or WS_ENDPOINT is not defined in .env file.');\n      onConnectionStatus('Error');\n      return;\n    }\n\n    // 创建并存储连接\n    connectionRef.current = new Connection(RPC_ENDPOINT, {\n      commitment: 'confirmed',\n      wsEndpoint: WS_ENDPOINT,\n    });\n\n    const connection = connectionRef.current;\n\n    // 避免直接访问内部属性，如 _rpcWebSocket\n\n    // 订阅账户变化\n    const publicKey = new PublicKey(account);\n\n    const subscriptionId = connection.onAccountChange(\n      publicKey,\n      (accountInfo, context) => {\n        const lamports = accountInfo.lamports;\n        console.log('Updated account info:', accountInfo);\n        console.log('Slot:', context.slot);\n\n        if (lamports !== undefined) {\n          onMessageReceived(`余额: ${lamports}`);\n        }\n\n        onConnectionResult(`Slot: ${context.slot}`);\n      },\n      'confirmed'\n    );\n\n    // 在订阅期间处理可能的错误\n    // 您可以使用 try/catch 块来捕获异常\n\n    return () => {\n      if (connectionRef.current) {\n        connectionRef.current.removeAccountChangeListener(subscriptionId)\n          .then(() => {\n            console.log('Account change listener removed.');\n            onConnectionStatus('Disconnected');\n          })\n          .catch((error) => {\n            console.error('Error removing account change listener:', error);\n          });\n      }\n    };\n  }, [onConnectionStatus, account, onMessageReceived, onConnectionResult]);\n\n  return null;\n});\n\nexport default WebSocketComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AAEvD,MAAMC,kBAAkB,gBAAAC,EAAA,cAAGN,KAAK,CAACO,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAC;EAAEG,kBAAkB;EAAEC,OAAO;EAAEC,iBAAiB;EAAEC;AAAmB,CAAC,KAAK;EAAAN,EAAA;EAChH,MAAMO,aAAa,GAAGX,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;IACvD,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,qBAAqB;IAErD,IAAI,CAACL,YAAY,IAAI,CAACI,WAAW,EAAE;MACjCE,OAAO,CAACC,KAAK,CAAC,0DAA0D,CAAC;MACzEZ,kBAAkB,CAAC,OAAO,CAAC;MAC3B;IACF;;IAEA;IACAI,aAAa,CAACS,OAAO,GAAG,IAAInB,UAAU,CAACW,YAAY,EAAE;MACnDS,UAAU,EAAE,WAAW;MACvBC,UAAU,EAAEN;IACd,CAAC,CAAC;IAEF,MAAMO,UAAU,GAAGZ,aAAa,CAACS,OAAO;;IAExC;;IAEA;IACA,MAAMI,SAAS,GAAG,IAAItB,SAAS,CAACM,OAAO,CAAC;IAExC,MAAMiB,cAAc,GAAGF,UAAU,CAACG,eAAe,CAC/CF,SAAS,EACT,CAACG,WAAW,EAAEC,OAAO,KAAK;MACxB,MAAMC,QAAQ,GAAGF,WAAW,CAACE,QAAQ;MACrCX,OAAO,CAACY,GAAG,CAAC,uBAAuB,EAAEH,WAAW,CAAC;MACjDT,OAAO,CAACY,GAAG,CAAC,OAAO,EAAEF,OAAO,CAACG,IAAI,CAAC;MAElC,IAAIF,QAAQ,KAAKG,SAAS,EAAE;QAC1BvB,iBAAiB,CAAC,OAAOoB,QAAQ,EAAE,CAAC;MACtC;MAEAnB,kBAAkB,CAAC,SAASkB,OAAO,CAACG,IAAI,EAAE,CAAC;IAC7C,CAAC,EACD,WACF,CAAC;;IAED;IACA;;IAEA,OAAO,MAAM;MACX,IAAIpB,aAAa,CAACS,OAAO,EAAE;QACzBT,aAAa,CAACS,OAAO,CAACa,2BAA2B,CAACR,cAAc,CAAC,CAC9DS,IAAI,CAAC,MAAM;UACVhB,OAAO,CAACY,GAAG,CAAC,kCAAkC,CAAC;UAC/CvB,kBAAkB,CAAC,cAAc,CAAC;QACpC,CAAC,CAAC,CACD4B,KAAK,CAAEhB,KAAK,IAAK;UAChBD,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QACjE,CAAC,CAAC;MACN;IACF,CAAC;EACH,CAAC,EAAE,CAACZ,kBAAkB,EAAEC,OAAO,EAAEC,iBAAiB,EAAEC,kBAAkB,CAAC,CAAC;EAExE,OAAO,IAAI;AACb,CAAC,kCAAC;AAAC0B,GAAA,GA5DGjC,kBAAkB;AA8DxB,eAAeA,kBAAkB;AAAC,IAAAG,EAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}