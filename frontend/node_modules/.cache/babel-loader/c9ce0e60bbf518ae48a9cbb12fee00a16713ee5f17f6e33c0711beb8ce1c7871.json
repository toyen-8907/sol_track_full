{"ast":null,"code":"// WebSocketComponent.js\nimport React,{useEffect}from'react';const WebSocketComponent=_ref=>{let{account,onSolBalanceReceived,onSPLBalancesReceived}=_ref;useEffect(()=>{// 连接到后端 WebSocket 服务器\nconst ws=new WebSocket('ws://localhost:5000');// 如有需要，请更新 URL\nws.onopen=()=>{console.log('WebSocket 已连接');// 发送订阅账户更新的请求\nws.send(JSON.stringify({action:'subscribe',account}));};ws.onmessage=event=>{const data=JSON.parse(event.data);if(data.type==='solBalance'){onSolBalanceReceived(parseFloat(data.balance));}else if(data.type==='splBalances'){onSPLBalancesReceived(data.balances);}};ws.onclose=()=>{console.log('WebSocket 已断开');};return()=>{ws.close();};},[account,onSolBalanceReceived,onSPLBalancesReceived]);return null;};export default WebSocketComponent;","map":{"version":3,"names":["React","useEffect","WebSocketComponent","_ref","account","onSolBalanceReceived","onSPLBalancesReceived","ws","WebSocket","onopen","console","log","send","JSON","stringify","action","onmessage","event","data","parse","type","parseFloat","balance","balances","onclose","close"],"sources":["C:/project/sol_track/sol_track_full/frontend/src/WebSocketComponent.js"],"sourcesContent":["// WebSocketComponent.js\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nconst WebSocketComponent = ({ account, onSolBalanceReceived, onSPLBalancesReceived }) => {\r\n  useEffect(() => {\r\n    // 连接到后端 WebSocket 服务器\r\n    const ws = new WebSocket('ws://localhost:5000'); // 如有需要，请更新 URL\r\n\r\n    ws.onopen = () => {\r\n      console.log('WebSocket 已连接');\r\n      // 发送订阅账户更新的请求\r\n      ws.send(JSON.stringify({ action: 'subscribe', account }));\r\n    };\r\n\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === 'solBalance') {\r\n        onSolBalanceReceived(parseFloat(data.balance));\r\n      } else if (data.type === 'splBalances') {\r\n        onSPLBalancesReceived(data.balances);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket 已断开');\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, [account, onSolBalanceReceived, onSPLBalancesReceived]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default WebSocketComponent;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAExC,KAAM,CAAAC,kBAAkB,CAAGC,IAAA,EAA8D,IAA7D,CAAEC,OAAO,CAAEC,oBAAoB,CAAEC,qBAAsB,CAAC,CAAAH,IAAA,CAClFF,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAM,EAAE,CAAG,GAAI,CAAAC,SAAS,CAAC,qBAAqB,CAAC,CAAE;AAEjDD,EAAE,CAACE,MAAM,CAAG,IAAM,CAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC5B;AACAJ,EAAE,CAACK,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,CAAEC,MAAM,CAAE,WAAW,CAAEX,OAAQ,CAAC,CAAC,CAAC,CAC3D,CAAC,CAEDG,EAAE,CAACS,SAAS,CAAIC,KAAK,EAAK,CACxB,KAAM,CAAAC,IAAI,CAAGL,IAAI,CAACM,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC,CACnC,GAAIA,IAAI,CAACE,IAAI,GAAK,YAAY,CAAE,CAC9Bf,oBAAoB,CAACgB,UAAU,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAChD,CAAC,IAAM,IAAIJ,IAAI,CAACE,IAAI,GAAK,aAAa,CAAE,CACtCd,qBAAqB,CAACY,IAAI,CAACK,QAAQ,CAAC,CACtC,CACF,CAAC,CAEDhB,EAAE,CAACiB,OAAO,CAAG,IAAM,CACjBd,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAC9B,CAAC,CAED,MAAO,IAAM,CACXJ,EAAE,CAACkB,KAAK,CAAC,CAAC,CACZ,CAAC,CACH,CAAC,CAAE,CAACrB,OAAO,CAAEC,oBAAoB,CAAEC,qBAAqB,CAAC,CAAC,CAE1D,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}