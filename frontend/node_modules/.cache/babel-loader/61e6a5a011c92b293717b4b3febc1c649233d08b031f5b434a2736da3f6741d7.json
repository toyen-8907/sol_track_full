{"ast":null,"code":"var _s = $RefreshSig$();\n// WebSocketComponent.js\n\nimport React, { useEffect } from 'react';\nconst WebSocketComponent = ({\n  accounts,\n  onSolBalanceReceived,\n  onSPLBalancesReceived\n}) => {\n  _s();\n  useEffect(() => {\n    // 初始化 WebSocket 連接\n    const ws = new WebSocket('ws://localhost:5001/ws');\n    ws.onopen = () => {\n      console.log('WebSocket 已連接');\n\n      // 訂閱所有帳號地址\n      accounts.forEach(account => {\n        ws.send(JSON.stringify({\n          action: 'subscribe',\n          account\n        }));\n      });\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      // 根據帳號的更新類型調用回調函數\n      if (data.type === 'solBalance') {\n        onSolBalanceReceived(data.account, parseFloat(data.balance));\n      } else if (data.type === 'splBalances') {\n        onSPLBalancesReceived(data.account, data.balances);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已斷開');\n    };\n    return () => {\n      ws.close();\n    };\n  }, [accounts, onSolBalanceReceived, onSPLBalancesReceived]);\n  return null;\n};\n_s(WebSocketComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","WebSocketComponent","accounts","onSolBalanceReceived","onSPLBalancesReceived","_s","ws","WebSocket","onopen","console","log","forEach","account","send","JSON","stringify","action","onmessage","event","data","parse","type","parseFloat","balance","balances","onclose","close","_c","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_full/frontend/src/WebSocketComponent.js"],"sourcesContent":["// WebSocketComponent.js\n\nimport React, { useEffect } from 'react';\n\nconst WebSocketComponent = ({ accounts, onSolBalanceReceived, onSPLBalancesReceived }) => {\n  useEffect(() => {\n    // 初始化 WebSocket 連接\n    const ws = new WebSocket('ws://localhost:5001/ws');\n\n    ws.onopen = () => {\n      console.log('WebSocket 已連接');\n      \n      // 訂閱所有帳號地址\n      accounts.forEach(account => {\n        ws.send(JSON.stringify({ action: 'subscribe', account }));\n      });\n    };\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      // 根據帳號的更新類型調用回調函數\n      if (data.type === 'solBalance') {\n        onSolBalanceReceived(data.account, parseFloat(data.balance));\n      } else if (data.type === 'splBalances') {\n        onSPLBalancesReceived(data.account, data.balances);\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket 已斷開');\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [accounts, onSolBalanceReceived, onSPLBalancesReceived]);\n\n  return null;\n};\n\nexport default WebSocketComponent;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,oBAAoB;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACxFL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;MAE5B;MACAR,QAAQ,CAACS,OAAO,CAACC,OAAO,IAAI;QAC1BN,EAAE,CAACO,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE,WAAW;UAAEJ;QAAQ,CAAC,CAAC,CAAC;MAC3D,CAAC,CAAC;IACJ,CAAC;IAEDN,EAAE,CAACW,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGL,IAAI,CAACM,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MACnC;MACA,IAAIA,IAAI,CAACE,IAAI,KAAK,YAAY,EAAE;QAC9BlB,oBAAoB,CAACgB,IAAI,CAACP,OAAO,EAAEU,UAAU,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC;MAC9D,CAAC,MAAM,IAAIJ,IAAI,CAACE,IAAI,KAAK,aAAa,EAAE;QACtCjB,qBAAqB,CAACe,IAAI,CAACP,OAAO,EAAEO,IAAI,CAACK,QAAQ,CAAC;MACpD;IACF,CAAC;IAEDlB,EAAE,CAACmB,OAAO,GAAG,MAAM;MACjBhB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,OAAO,MAAM;MACXJ,EAAE,CAACoB,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,CAACxB,QAAQ,EAAEC,oBAAoB,EAAEC,qBAAqB,CAAC,CAAC;EAE3D,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAlCIJ,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAoCxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}