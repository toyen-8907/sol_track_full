{"ast":null,"code":"import { struct, u8 } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a transfer fee config extension */\nexport const DefaultAccountStateLayout = struct([u8('state')]);\nexport const DEFAULT_ACCOUNT_STATE_SIZE = DefaultAccountStateLayout.span;\nexport function getDefaultAccountState(mint) {\n  const extensionData = getExtensionData(ExtensionType.DefaultAccountState, mint.tlvData);\n  if (extensionData !== null) {\n    return DefaultAccountStateLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}","map":{"version":3,"names":["struct","u8","ExtensionType","getExtensionData","DefaultAccountStateLayout","DEFAULT_ACCOUNT_STATE_SIZE","span","getDefaultAccountState","mint","extensionData","DefaultAccountState","tlvData","decode"],"sources":["C:\\monitor_sol_web\\solactrackmap\\node_modules\\@solana\\spl-token\\src\\extensions\\defaultAccountState\\state.ts"],"sourcesContent":["import { struct, u8 } from '@solana/buffer-layout';\r\nimport type { AccountState } from '../../state/account.js';\r\nimport type { Mint } from '../../state/mint.js';\r\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\r\n\r\n/** DefaultAccountState as stored by the program */\r\nexport interface DefaultAccountState {\r\n    /** Default AccountState in which new accounts are initialized */\r\n    state: AccountState;\r\n}\r\n\r\n/** Buffer layout for de/serializing a transfer fee config extension */\r\nexport const DefaultAccountStateLayout = struct<DefaultAccountState>([u8('state')]);\r\n\r\nexport const DEFAULT_ACCOUNT_STATE_SIZE = DefaultAccountStateLayout.span;\r\n\r\nexport function getDefaultAccountState(mint: Mint): DefaultAccountState | null {\r\n    const extensionData = getExtensionData(ExtensionType.DefaultAccountState, mint.tlvData);\r\n    if (extensionData !== null) {\r\n        return DefaultAccountStateLayout.decode(extensionData);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,EAAE,QAAQ,uBAAuB;AAGlD,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,qBAAqB;AAQrE;AACA,OAAO,MAAMC,yBAAyB,GAAGJ,MAAM,CAAsB,CAACC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;AAEnF,OAAO,MAAMI,0BAA0B,GAAGD,yBAAyB,CAACE,IAAI;AAExE,OAAM,SAAUC,sBAAsBA,CAACC,IAAU;EAC7C,MAAMC,aAAa,GAAGN,gBAAgB,CAACD,aAAa,CAACQ,mBAAmB,EAAEF,IAAI,CAACG,OAAO,CAAC;EACvF,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOL,yBAAyB,CAACQ,MAAM,CAACH,aAAa,CAAC;EAC1D,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}