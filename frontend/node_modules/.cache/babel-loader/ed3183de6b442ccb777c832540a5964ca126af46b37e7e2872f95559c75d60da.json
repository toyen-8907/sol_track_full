{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nconst WebSocketComponent = ({\n  accounts,\n  onSolBalanceReceived,\n  onSPLBalancesReceived\n}) => {\n  _s();\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:5001/ws');\n    ws.onopen = () => {\n      console.log('WebSocket 已連接');\n      // 訂閱多個帳號地址\n      if (accounts && accounts.length > 0) {\n        accounts.forEach(account => {\n          ws.send(JSON.stringify({\n            action: 'subscribe',\n            account\n          }));\n        });\n      } else {\n        console.error('帳號列表為空');\n      }\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log('收到消息:', data);\n\n      // 處理不同類型的消息\n      if (data.type === 'solBalance') {\n        // 傳遞 account 和 balance\n        onSolBalanceReceived(data.account, parseFloat(data.balance));\n        console.log('SOL 餘額更新:', data.balance);\n      } else if (data.type === 'splBalances') {\n        onSPLBalancesReceived(data.account, data.balances);\n        console.log('SPL 代幣餘額更新:', data.balances);\n      } else if (data.type === 'heartbeat') {\n        console.log('收到心跳消息');\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket 已斷開');\n    };\n    return () => {\n      ws.close();\n    };\n  }, [accounts, onSolBalanceReceived, onSPLBalancesReceived]);\n  return null;\n};\n_s(WebSocketComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","WebSocketComponent","accounts","onSolBalanceReceived","onSPLBalancesReceived","_s","ws","WebSocket","onopen","console","log","length","forEach","account","send","JSON","stringify","action","error","onmessage","event","data","parse","type","parseFloat","balance","balances","onclose","close","_c","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_full/frontend/src/WebSocketComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst WebSocketComponent = ({ accounts, onSolBalanceReceived, onSPLBalancesReceived }) => {\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:5001/ws');\n\n    ws.onopen = () => {\n      console.log('WebSocket 已連接');\n      // 訂閱多個帳號地址\n      if (accounts && accounts.length > 0) {\n        accounts.forEach(account => {\n          ws.send(JSON.stringify({ action: 'subscribe', account }));\n        });\n      } else {\n        console.error('帳號列表為空');\n      }\n    };\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('收到消息:', data);\n\n      // 處理不同類型的消息\n      if (data.type === 'solBalance') {\n        // 傳遞 account 和 balance\n        onSolBalanceReceived(data.account, parseFloat(data.balance));\n        console.log('SOL 餘額更新:', data.balance);\n      } else if (data.type === 'splBalances') {\n        onSPLBalancesReceived(data.account, data.balances);\n        console.log('SPL 代幣餘額更新:', data.balances);\n      } else if (data.type === 'heartbeat') {\n        console.log('收到心跳消息');\n      }\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket 已斷開');\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [accounts, onSolBalanceReceived, onSPLBalancesReceived]);\n\n  return null;\n};\n\nexport default WebSocketComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,oBAAoB;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACxFL,SAAS,CAAC,MAAM;IACd,MAAMM,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B;MACA,IAAIR,QAAQ,IAAIA,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;QACnCT,QAAQ,CAACU,OAAO,CAACC,OAAO,IAAI;UAC1BP,EAAE,CAACQ,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;YAAEC,MAAM,EAAE,WAAW;YAAEJ;UAAQ,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC;MACJ,CAAC,MAAM;QACLJ,OAAO,CAACS,KAAK,CAAC,QAAQ,CAAC;MACzB;IACF,CAAC;IAEDZ,EAAE,CAACa,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MACnCZ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEW,IAAI,CAAC;;MAE1B;MACA,IAAIA,IAAI,CAACE,IAAI,KAAK,YAAY,EAAE;QAC9B;QACApB,oBAAoB,CAACkB,IAAI,CAACR,OAAO,EAAEW,UAAU,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC;QAC5DhB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEW,IAAI,CAACI,OAAO,CAAC;MACxC,CAAC,MAAM,IAAIJ,IAAI,CAACE,IAAI,KAAK,aAAa,EAAE;QACtCnB,qBAAqB,CAACiB,IAAI,CAACR,OAAO,EAAEQ,IAAI,CAACK,QAAQ,CAAC;QAClDjB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEW,IAAI,CAACK,QAAQ,CAAC;MAC3C,CAAC,MAAM,IAAIL,IAAI,CAACE,IAAI,KAAK,WAAW,EAAE;QACpCd,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB;IACF,CAAC;IAEDJ,EAAE,CAACqB,OAAO,GAAG,MAAM;MACjBlB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,OAAO,MAAM;MACXJ,EAAE,CAACsB,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,CAAC1B,QAAQ,EAAEC,oBAAoB,EAAEC,qBAAqB,CAAC,CAAC;EAE3D,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CA3CIJ,kBAAkB;AAAA4B,EAAA,GAAlB5B,kBAAkB;AA6CxB,eAAeA,kBAAkB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}