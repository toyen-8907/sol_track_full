{"ast":null,"code":"var _jsxFileName = \"/Users/damentp01/project/sol_track_full/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport WebSocketComponent from './WebSocketComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [accounts] = useState([\"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\", \"AnotherPublicKeyHere\" // 可在此添加更多帳戶公鑰\n  ]);\n  const [balances, setBalances] = useState({});\n  const [percentageChanges, setPercentageChanges] = useState({});\n  const [splBalances, setSplBalances] = useState({});\n\n  // 從後端獲取初始餘額\n  useEffect(() => {\n    const fetchBalances = async () => {\n      try {\n        for (const account of accounts) {\n          const solResponse = await fetch(`/solBalance/${account}`);\n          const solData = await solResponse.json();\n          setBalances(prev => ({\n            ...prev,\n            [account]: solData.balance\n          }));\n          setPercentageChanges(prev => ({\n            ...prev,\n            [account]: 0\n          }));\n          const splResponse = await fetch(`/splBalances/${account}`);\n          const splData = await splResponse.json();\n\n          // 檢查 splData 是否是陣列，並安全地處理\n          if (Array.isArray(splData)) {\n            setSplBalances(prev => ({\n              ...prev,\n              [account]: splData.filter(token => parseFloat(token.balance) > 0)\n            }));\n          } else {\n            console.error(`Expected an array but received: ${splData}`);\n            setSplBalances(prev => ({\n              ...prev,\n              [account]: []\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('取得初始餘額時出錯:', error);\n      }\n    };\n    fetchBalances();\n  }, [accounts]);\n\n  // 處理從 WebSocket 接收到的新 SOL 餘額\n  const handleSolBalanceReceived = useCallback((account, balance) => {\n    setBalances(prev => ({\n      ...prev,\n      [account]: balance\n    }));\n    if (balances[account] !== null) {\n      const change = (balance - balances[account]) / balances[account] * 100;\n      setPercentageChanges(prev => ({\n        ...prev,\n        [account]: change.toFixed(2)\n      }));\n    }\n  }, [balances]);\n\n  // 處理從 WebSocket 接收到的新的 SPL 代幣餘額\n  const handleSPLBalancesReceived = useCallback((account, receivedBalances) => {\n    const nonZeroBalances = Array.isArray(receivedBalances) ? receivedBalances.filter(token => parseFloat(token.balance) > 0) : [];\n    setSplBalances(prev => ({\n      ...prev,\n      [account]: nonZeroBalances\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Solana \\u5E33\\u6236\\u76E3\\u63A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-co\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [account, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WebSocketComponent, {\n          account: account,\n          onSolBalanceReceived: balance => handleSolBalanceReceived(account, balance),\n          onSPLBalancesReceived: balances => handleSPLBalancesReceived(account, balances)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-bottom-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard_left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"\\u9918\\u984D: \", balances[account] || 0, \" $SOL\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), percentageChanges[account] !== null && /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: percentageChanges[account] > 0 ? 'green' : 'red'\n              },\n              children: [\"\\u6F32\\u8DCC: \", percentageChanges[account], \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard_right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"token-grid\",\n              children: (splBalances[account] || []).map((token, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"token-item\",\n                onClick: () => navigator.clipboard.writeText(token.mint),\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"TOKEN \\u5408\\u7D04\\u5730\\u5740: \", token.mint.slice(0, 7), \"...\", token.mint.slice(-7)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"\\u9322\\u5305\\u9918\\u984D: \", parseFloat(token.balance).toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, account, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"c0vrDlpTfLMeLBycYbx5ycXCaSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","WebSocketComponent","jsxDEV","_jsxDEV","App","_s","accounts","balances","setBalances","percentageChanges","setPercentageChanges","splBalances","setSplBalances","fetchBalances","account","solResponse","fetch","solData","json","prev","balance","splResponse","splData","Array","isArray","filter","token","parseFloat","console","error","handleSolBalanceReceived","change","toFixed","handleSPLBalancesReceived","receivedBalances","nonZeroBalances","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onSolBalanceReceived","onSPLBalancesReceived","style","color","index","onClick","navigator","clipboard","writeText","mint","slice","_c","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_full/frontend/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\nimport WebSocketComponent from './WebSocketComponent';\n\nconst App = () => {\n  const [accounts] = useState([\n    \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\",\n    \"AnotherPublicKeyHere\", // 可在此添加更多帳戶公鑰\n  ]);\n  const [balances, setBalances] = useState({});\n  const [percentageChanges, setPercentageChanges] = useState({});\n  const [splBalances, setSplBalances] = useState({});\n\n  // 從後端獲取初始餘額\n  useEffect(() => {\n    const fetchBalances = async () => {\n      try {\n        for (const account of accounts) {\n          const solResponse = await fetch(`/solBalance/${account}`);\n          const solData = await solResponse.json();\n          \n          setBalances(prev => ({ ...prev, [account]: solData.balance }));\n          setPercentageChanges(prev => ({ ...prev, [account]: 0 }));\n\n          const splResponse = await fetch(`/splBalances/${account}`);\n          const splData = await splResponse.json();\n\n          // 檢查 splData 是否是陣列，並安全地處理\n          if (Array.isArray(splData)) {\n            setSplBalances(prev => ({\n              ...prev,\n              [account]: splData.filter(token => parseFloat(token.balance) > 0),\n            }));\n          } else {\n            console.error(`Expected an array but received: ${splData}`);\n            setSplBalances(prev => ({ ...prev, [account]: [] }));\n          }\n        }\n      } catch (error) {\n        console.error('取得初始餘額時出錯:', error);\n      }\n    };\n\n    fetchBalances();\n  }, [accounts]);\n\n  // 處理從 WebSocket 接收到的新 SOL 餘額\n  const handleSolBalanceReceived = useCallback((account, balance) => {\n    setBalances(prev => ({ ...prev, [account]: balance }));\n\n    if (balances[account] !== null) {\n      const change = ((balance - balances[account]) / balances[account]) * 100;\n      setPercentageChanges(prev => ({ ...prev, [account]: change.toFixed(2) }));\n    }\n  }, [balances]);\n\n  // 處理從 WebSocket 接收到的新的 SPL 代幣餘額\n  const handleSPLBalancesReceived = useCallback((account, receivedBalances) => {\n    const nonZeroBalances = Array.isArray(receivedBalances) ? \n                            receivedBalances.filter(token => parseFloat(token.balance) > 0) : \n                            [];\n    setSplBalances(prev => ({ ...prev, [account]: nonZeroBalances }));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Solana 帳戶監控</h2>\n      </header>\n\n      {/* 主體內容：迴圈遍歷所有帳號 */}\n      <div className=\"dashboard-co\">\n        {accounts.map(account => (\n          <div key={account} className=\"account-section\">\n            <h2>{account}:</h2>\n\n            {/* 引入 WebSocketComponent，並傳遞必要的屬性 */}\n            <WebSocketComponent\n              account={account}\n              onSolBalanceReceived={(balance) => handleSolBalanceReceived(account, balance)}\n              onSPLBalancesReceived={(balances) => handleSPLBalancesReceived(account, balances)}\n            />\n\n            <div className=\"dashboard-bottom-container\">\n              {/* 左側：SOL 餘額 */}\n              <div className=\"dashboard_left\">\n                <h3>餘額: {balances[account] || 0} $SOL</h3>\n                {percentageChanges[account] !== null && (\n                  <h4 style={{ color: percentageChanges[account] > 0 ? 'green' : 'red' }}>\n                    漲跌: {percentageChanges[account]}%\n                  </h4>\n                )}\n              </div>\n\n              {/* 右側：SPL 代幣餘額 */}\n              <div className=\"dashboard_right\">\n                <div className=\"token-grid\">\n                  {(splBalances[account] || []).map((token, index) => (\n                    <div key={index} className=\"token-item\" onClick={() => navigator.clipboard.writeText(token.mint)}>\n                      <p>TOKEN 合約地址: {token.mint.slice(0, 7)}...{token.mint.slice(-7)}</p>\n                      <p>錢包餘額: {parseFloat(token.balance).toFixed(4)}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}