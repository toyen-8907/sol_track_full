{"ast":null,"code":"var _jsxFileName = \"/Users/damentp01/project/sol_track_ac/src/App.js\",\n  _s = $RefreshSig$();\n// 导入 React 和必要的钩子函数\nimport React, { useState, useCallback } from 'react';\n// 导入样式表\nimport './App.css';\n// 导入子组件 WebSocketComponent\nimport WebSocketComponent from './WebSocketComponent';\n\n// 定义 App 组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // 定义消息列表的連接result數值，初始为空数组\n  const [connectionResult, setConnectionResult] = useState(\"None\");\n  // 定义连接状态的状态变量，初始值为 \"Disconnected\"\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\n  // 定义消息列表的状态变量，初始为空数组\n  const [messages, setMessages] = useState([]);\n  //\n  const [splBalances, setSplBalances] = useState(\"None\");\n  // 需要订阅的账户地址\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\";\n\n  // 处理连接状态更新的回调函数\n  const handleConnectionStatus = useCallback(status => {\n    setConnectionStatus(status);\n  }, []);\n  // 处理新消息的Result\n  const handleConnectionResult = useCallback(status => {\n    setConnectionResult(status);\n  }, []);\n  // 处理新消息的回调函数\n  const handleNewMessage = useCallback(message => {\n    setMessages(prevMessages => [...prevMessages, message]); // 更新消息状态\n  }, []);\n\n  // 處理新SPL代幣更新狀況\n  const handleSPLbalance = useCallback(balances => {\n    setSplBalances(balances);\n  }, []);\n\n  // 渲染组件\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"WebSocket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WebSocketComponent, {\n      onConnectionStatus: handleConnectionStatus,\n      account: account,\n      onMessageReceived: handleNewMessage // 传递回调函数\n      ,\n      onConnectionResult: handleConnectionResult,\n      onSPLbalance: handleSPLbalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_left\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: msg\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this) // 显示每条消息\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_right\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: msg\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this) // 显示每条消息\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// 导出 App 组件\n_s(App, \"cKjW7BU/1ELKMyv0u3tl+ezbAus=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","WebSocketComponent","jsxDEV","_jsxDEV","App","_s","connectionResult","setConnectionResult","connectionStatus","setConnectionStatus","messages","setMessages","splBalances","setSplBalances","account","handleConnectionStatus","status","handleConnectionResult","handleNewMessage","message","prevMessages","handleSPLbalance","balances","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnectionStatus","onMessageReceived","onConnectionResult","onSPLbalance","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_ac/src/App.js"],"sourcesContent":["// 导入 React 和必要的钩子函数\nimport React, { useState, useCallback } from 'react';\n// 导入样式表\nimport './App.css';\n// 导入子组件 WebSocketComponent\nimport WebSocketComponent from './WebSocketComponent';\n\n// 定义 App 组件\nconst App = () => {\n  // 定义消息列表的連接result數值，初始为空数组\n  const [connectionResult, setConnectionResult] = useState(\"None\");\n  // 定义连接状态的状态变量，初始值为 \"Disconnected\"\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\n  // 定义消息列表的状态变量，初始为空数组\n  const [messages, setMessages] = useState([]);\n  //\n  const [splBalances, setSplBalances] = useState(\"None\");\n  // 需要订阅的账户地址\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\";\n\n  // 处理连接状态更新的回调函数\n  const handleConnectionStatus = useCallback((status) => {\n    setConnectionStatus(status);\n  }, []);\n  // 处理新消息的Result\n  const handleConnectionResult = useCallback((status) => {\n    setConnectionResult(status);\n  }, []);\n  // 处理新消息的回调函数\n  const handleNewMessage = useCallback((message) => {\n    setMessages(prevMessages => [...prevMessages, message]); // 更新消息状态\n  }, []);\n\n  // 處理新SPL代幣更新狀況\n  const handleSPLbalance = useCallback((balances) => {\n    setSplBalances(balances);\n  }, []);\n\n  // 渲染组件\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* 显示 WebSocket 的连接状态 */}\n        <h2>WebSocket Status: {connectionStatus}</h2>\n      </header> \n      {/* 引入 WebSocketComponent，并传递所需的 props */}\n      <WebSocketComponent \n        onConnectionStatus={handleConnectionStatus} \n        account={account} \n        onMessageReceived={handleNewMessage} // 传递回调函数\n        onConnectionResult={handleConnectionResult}\n        onSPLbalance={handleSPLbalance}\n      />\n      <div className='dashboard-container'>\n  \n      <div className='dashboard_left'>\n        <ul>\n          {/* 显示接收到的消息列表 */}\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li> // 显示每条消息\n          ))}\n        </ul>\n      </div>\n      {/* 右側dashboard */}\n      <div className='dashboard_right'>\n        <ul>\n          {/* 显示接收到的消息列表 */}\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li> // 显示每条消息\n          ))}\n        </ul>\n      </div>\n      </div>\n      \n    </div>\n  );\n}\n\n// 导出 App 组件\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}