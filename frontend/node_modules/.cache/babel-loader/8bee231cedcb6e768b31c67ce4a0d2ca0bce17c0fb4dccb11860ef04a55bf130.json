{"ast":null,"code":"import { struct } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing an account */\nexport const NonTransferableLayout = struct([]);\nexport const NON_TRANSFERABLE_SIZE = NonTransferableLayout.span;\nexport const NON_TRANSFERABLE_ACCOUNT_SIZE = NonTransferableLayout.span;\nexport function getNonTransferable(mint) {\n  const extensionData = getExtensionData(ExtensionType.NonTransferable, mint.tlvData);\n  if (extensionData !== null) {\n    return NonTransferableLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\nexport function getNonTransferableAccount(account) {\n  const extensionData = getExtensionData(ExtensionType.NonTransferableAccount, account.tlvData);\n  if (extensionData !== null) {\n    return NonTransferableLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}","map":{"version":3,"names":["struct","ExtensionType","getExtensionData","NonTransferableLayout","NON_TRANSFERABLE_SIZE","span","NON_TRANSFERABLE_ACCOUNT_SIZE","getNonTransferable","mint","extensionData","NonTransferable","tlvData","decode","getNonTransferableAccount","account","NonTransferableAccount"],"sources":["/Users/damentp01/project/sol_track_ac/node_modules/@solana/spl-token/src/extensions/nonTransferable.ts"],"sourcesContent":["import { struct } from '@solana/buffer-layout';\nimport type { Account } from '../state/account.js';\nimport type { Mint } from '../state/mint.js';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n\n/** Non-transferable mint state as stored by the program */\nexport interface NonTransferable {} // eslint-disable-line\n\n/** Non-transferable token account state as stored by the program */\nexport interface NonTransferableAccount {} // eslint-disable-line\n\n/** Buffer layout for de/serializing an account */\nexport const NonTransferableLayout = struct<NonTransferable>([]);\n\nexport const NON_TRANSFERABLE_SIZE = NonTransferableLayout.span;\nexport const NON_TRANSFERABLE_ACCOUNT_SIZE = NonTransferableLayout.span;\n\nexport function getNonTransferable(mint: Mint): NonTransferable | null {\n    const extensionData = getExtensionData(ExtensionType.NonTransferable, mint.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n\nexport function getNonTransferableAccount(account: Account): NonTransferableAccount | null {\n    const extensionData = getExtensionData(ExtensionType.NonTransferableAccount, account.tlvData);\n    if (extensionData !== null) {\n        return NonTransferableLayout.decode(extensionData);\n    } else {\n        return null;\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAG9C,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,oBAAoB;AAQpE;AACA,OAAO,MAAMC,qBAAqB,GAAGH,MAAM,CAAkB,EAAE,CAAC;AAEhE,OAAO,MAAMI,qBAAqB,GAAGD,qBAAqB,CAACE,IAAI;AAC/D,OAAO,MAAMC,6BAA6B,GAAGH,qBAAqB,CAACE,IAAI;AAEvE,OAAM,SAAUE,kBAAkBA,CAACC,IAAU;EACzC,MAAMC,aAAa,GAAGP,gBAAgB,CAACD,aAAa,CAACS,eAAe,EAAEF,IAAI,CAACG,OAAO,CAAC;EACnF,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAON,qBAAqB,CAACS,MAAM,CAACH,aAAa,CAAC;EACtD,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ;AAEA,OAAM,SAAUI,yBAAyBA,CAACC,OAAgB;EACtD,MAAML,aAAa,GAAGP,gBAAgB,CAACD,aAAa,CAACc,sBAAsB,EAAED,OAAO,CAACH,OAAO,CAAC;EAC7F,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAON,qBAAqB,CAACS,MAAM,CAACH,aAAa,CAAC;EACtD,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}