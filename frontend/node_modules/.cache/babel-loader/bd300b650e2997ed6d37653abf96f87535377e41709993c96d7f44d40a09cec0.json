{"ast":null,"code":"var _jsxFileName = \"/Users/damentp01/project/sol_track_ac/src/App.js\",\n  _s = $RefreshSig$();\n// 导入 React 和必要的钩子函数\nimport React, { useState, useCallback } from 'react';\n// 导入样式表\nimport './App.css';\n// 导入子组件 WebSocketComponent\nimport WebSocketComponent from './WebSocketComponent';\n// index.js 或 App.js\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.Buffer = Buffer;\n\n// 定义 App 组件\nconst App = () => {\n  _s();\n  // 定义消息列表的連接result數值，初始为空数组\n  const [connectionResult, setConnectionResult] = useState(\"None\");\n  // 定义连接状态的状态变量，初始值为 \"Disconnected\"\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\n  // 定义消息列表的状态变量，初始为空数组\n  const [messages, setMessages] = useState([]);\n  //\n  const [splBalances, setSplBalances] = useState([]);\n  // 需要订阅的账户地址\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\";\n\n  // 处理连接状态更新的回调函数\n  const handleConnectionStatus = useCallback(status => {\n    setConnectionStatus(status);\n  }, []);\n  // 处理新消息的Result\n  const handleConnectionResult = useCallback(status => {\n    setConnectionResult(status);\n  }, []);\n  // 处理新消息的回调函数\n  const handleNewMessage = useCallback(message => {\n    setMessages(prevMessages => [...prevMessages, message]); // 更新消息状态\n  }, []);\n\n  // 處理新SPL代幣更新狀況\n  const handleSPLbalance = useCallback(balances => {\n    setSplBalances(balances);\n  }, []);\n\n  // 渲染组件\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"WebSocket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WebSocketComponent, {\n      onConnectionStatus: handleConnectionStatus,\n      account: account,\n      onMessageReceived: handleNewMessage // 传递回调函数\n      ,\n      onConnectionResult: handleConnectionResult,\n      onSPLbalance: handleSPLbalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-co\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [account, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Latest Result: \", connectionResult]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_left\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: msg\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this) // 显示每条消息\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_right\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: splBalances.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: msg\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this) // 显示每条消息\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n// 导出 App 组件\n_s(App, \"QEITQACAqKx6Z62M9REe/hvXBKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","WebSocketComponent","Buffer","jsxDEV","_jsxDEV","window","App","_s","connectionResult","setConnectionResult","connectionStatus","setConnectionStatus","messages","setMessages","splBalances","setSplBalances","account","handleConnectionStatus","status","handleConnectionResult","handleNewMessage","message","prevMessages","handleSPLbalance","balances","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnectionStatus","onMessageReceived","onConnectionResult","onSPLbalance","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/damentp01/project/sol_track_ac/src/App.js"],"sourcesContent":["// 导入 React 和必要的钩子函数\nimport React, { useState, useCallback } from 'react';\n// 导入样式表\nimport './App.css';\n// 导入子组件 WebSocketComponent\nimport WebSocketComponent from './WebSocketComponent';\n// index.js 或 App.js\nimport { Buffer } from 'buffer';\nwindow.Buffer = Buffer;\n\n// 定义 App 组件\nconst App = () => {\n  // 定义消息列表的連接result數值，初始为空数组\n  const [connectionResult, setConnectionResult] = useState(\"None\");\n  // 定义连接状态的状态变量，初始值为 \"Disconnected\"\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\n  // 定义消息列表的状态变量，初始为空数组\n  const [messages, setMessages] = useState([]);\n  //\n  const [splBalances, setSplBalances] = useState([]);\n  // 需要订阅的账户地址\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\";\n\n  // 处理连接状态更新的回调函数\n  const handleConnectionStatus = useCallback((status) => {\n    setConnectionStatus(status);\n  }, []);\n  // 处理新消息的Result\n  const handleConnectionResult = useCallback((status) => {\n    setConnectionResult(status);\n  }, []);\n  // 处理新消息的回调函数\n  const handleNewMessage = useCallback((message) => {\n    setMessages(prevMessages => [...prevMessages, message]); // 更新消息状态\n  }, []);\n\n  // 處理新SPL代幣更新狀況\n  const handleSPLbalance = useCallback((balances) => {\n    setSplBalances(balances);\n  }, []);\n\n  // 渲染组件\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* 显示 WebSocket 的连接状态 */}\n        <h2>WebSocket Status: {connectionStatus}</h2>\n      </header> \n      {/* 引入 WebSocketComponent，并传递所需的 props */}\n      <WebSocketComponent \n        onConnectionStatus={handleConnectionStatus} \n        account={account} \n        onMessageReceived={handleNewMessage} // 传递回调函数\n        onConnectionResult={handleConnectionResult}\n        onSPLbalance={handleSPLbalance}\n      />\n      <div className='dashboard-co'>\n        <h2>{account}:</h2>\n            \n            {/* 顯示最新的 result 值 */}\n            <h4>Latest Result: {connectionResult}</h4>\n    \n            <h3>Received Messages:</h3>\n      \n            <div className='dashboard-bottom-container'>\n                <div className='dashboard_left'>\n                  <ul>\n                    {/* 显示接收到的消息列表 */}\n                    {messages.map((msg, index) => (\n                      <li key={index}>{msg}</li> // 显示每条消息\n                    ))}\n                  </ul>\n                </div>\n                {/* 右側dashboard */}\n                <div className='dashboard_right'>\n                  <ul>\n                    {/* 显示接收到的消息列表 */}\n                    {splBalances.map((msg, index) => (\n                      <li key={index}>{msg}</li> // 显示每条消息\n                    ))}\n                  </ul>\n                </div>\n            </div>\n      </div>\n\n      \n    </div>\n  );\n}\n\n// 导出 App 组件\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}