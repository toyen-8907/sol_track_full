{"ast":null,"code":"import { PublicKey } from '@solana/web3.js';\n/** Address of the SPL Token program */\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/** Address of the SPL Token 2022 program */\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/** Address of the special mint for wrapped native SOL in spl-token */\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\nexport function programSupportsExtensions(programId) {\n  if (programId.equals(TOKEN_PROGRAM_ID)) {\n    return false;\n  } else {\n    return true;\n  }\n}","map":{"version":3,"names":["PublicKey","TOKEN_PROGRAM_ID","TOKEN_2022_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","NATIVE_MINT","NATIVE_MINT_2022","programSupportsExtensions","programId","equals"],"sources":["C:\\monitor_sol_web\\solactrackmap\\node_modules\\@solana\\spl-token\\src\\constants.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\r\n\r\n/** Address of the SPL Token program */\r\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\r\n\r\n/** Address of the SPL Token 2022 program */\r\nexport const TOKEN_2022_PROGRAM_ID = new PublicKey('TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb');\r\n\r\n/** Address of the SPL Associated Token Account program */\r\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\r\n\r\n/** Address of the special mint for wrapped native SOL in spl-token */\r\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\r\n\r\n/** Address of the special mint for wrapped native SOL in spl-token-2022 */\r\nexport const NATIVE_MINT_2022 = new PublicKey('9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP');\r\n\r\n/** Check that the token program provided is not `Tokenkeg...`, useful when using extensions */\r\nexport function programSupportsExtensions(programId: PublicKey): boolean {\r\n    if (programId.equals(TOKEN_PROGRAM_ID)) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C;AACA,OAAO,MAAMC,gBAAgB,GAAG,IAAID,SAAS,CAAC,6CAA6C,CAAC;AAE5F;AACA,OAAO,MAAME,qBAAqB,GAAG,IAAIF,SAAS,CAAC,6CAA6C,CAAC;AAEjG;AACA,OAAO,MAAMG,2BAA2B,GAAG,IAAIH,SAAS,CAAC,8CAA8C,CAAC;AAExG;AACA,OAAO,MAAMI,WAAW,GAAG,IAAIJ,SAAS,CAAC,6CAA6C,CAAC;AAEvF;AACA,OAAO,MAAMK,gBAAgB,GAAG,IAAIL,SAAS,CAAC,8CAA8C,CAAC;AAE7F;AACA,OAAM,SAAUM,yBAAyBA,CAACC,SAAoB;EAC1D,IAAIA,SAAS,CAACC,MAAM,CAACP,gBAAgB,CAAC,EAAE;IACpC,OAAO,KAAK;EAChB,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}