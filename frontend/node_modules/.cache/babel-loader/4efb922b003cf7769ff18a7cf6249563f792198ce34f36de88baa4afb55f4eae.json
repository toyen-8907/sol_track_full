{"ast":null,"code":"import { struct } from '@solana/buffer-layout';\nimport { ExtensionType, getExtensionData } from './extensionType.js';\n/** Buffer layout for de/serializing an account */\nexport const ImmutableOwnerLayout = struct([]);\nexport const IMMUTABLE_OWNER_SIZE = ImmutableOwnerLayout.span;\nexport function getImmutableOwner(account) {\n  const extensionData = getExtensionData(ExtensionType.ImmutableOwner, account.tlvData);\n  if (extensionData !== null) {\n    return ImmutableOwnerLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}","map":{"version":3,"names":["struct","ExtensionType","getExtensionData","ImmutableOwnerLayout","IMMUTABLE_OWNER_SIZE","span","getImmutableOwner","account","extensionData","ImmutableOwner","tlvData","decode"],"sources":["C:\\monitor_sol_web\\solactrackmap\\node_modules\\@solana\\spl-token\\src\\extensions\\immutableOwner.ts"],"sourcesContent":["import { struct } from '@solana/buffer-layout';\r\nimport type { Account } from '../state/account.js';\r\nimport { ExtensionType, getExtensionData } from './extensionType.js';\r\n\r\n/** ImmutableOwner as stored by the program */\r\nexport interface ImmutableOwner {} // eslint-disable-line\r\n\r\n/** Buffer layout for de/serializing an account */\r\nexport const ImmutableOwnerLayout = struct<ImmutableOwner>([]);\r\n\r\nexport const IMMUTABLE_OWNER_SIZE = ImmutableOwnerLayout.span;\r\n\r\nexport function getImmutableOwner(account: Account): ImmutableOwner | null {\r\n    const extensionData = getExtensionData(ExtensionType.ImmutableOwner, account.tlvData);\r\n    if (extensionData !== null) {\r\n        return ImmutableOwnerLayout.decode(extensionData);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAE9C,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,oBAAoB;AAKpE;AACA,OAAO,MAAMC,oBAAoB,GAAGH,MAAM,CAAiB,EAAE,CAAC;AAE9D,OAAO,MAAMI,oBAAoB,GAAGD,oBAAoB,CAACE,IAAI;AAE7D,OAAM,SAAUC,iBAAiBA,CAACC,OAAgB;EAC9C,MAAMC,aAAa,GAAGN,gBAAgB,CAACD,aAAa,CAACQ,cAAc,EAAEF,OAAO,CAACG,OAAO,CAAC;EACrF,IAAIF,aAAa,KAAK,IAAI,EAAE;IACxB,OAAOL,oBAAoB,CAACQ,MAAM,CAACH,aAAa,CAAC;EACrD,CAAC,MAAM;IACH,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}