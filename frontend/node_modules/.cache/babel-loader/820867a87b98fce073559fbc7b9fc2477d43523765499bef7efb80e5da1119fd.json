{"ast":null,"code":"var _jsxFileName = \"C:\\\\monitor_sol_web\\\\solactrackmap\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// 导入 React 及其必要的钩子函数\nimport React, { useState, useCallback } from 'react';\n// 导入样式表\nimport './App.css';\n// 导入自定义的 WebSocket 组件\nimport WebSocketComponent from './WebSocketComponent';\n// 导入 buffer 包并在浏览器环境中 polyfill Buffer\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.Buffer = Buffer;\n\n// 定义主组件 App\nconst App = () => {\n  _s();\n  // 定义状态变量，用于存储连接结果，初始值为 \"None\"\n  const [connectionResult, setConnectionResult] = useState(\"None\");\n\n  // 定义状态变量，用于存储连接状态，初始值为 \"Disconnected\"\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\n\n  // 定义状态变量，用于存储接收到的消息，初始为空数组\n  const [messages, setMessages] = useState([]);\n\n  // 定义状态变量，用于存储 SPL 代币余额，初始为空数组\n  const [splBalances, setSplBalances] = useState([]);\n  const [previousBalance, setPreviousBalance] = useState(null); // 上一個餘額\n  const [solBalance, setSolBalance] = useState(null); // 當前 SOL 餘額\n  const [percentageChange, setPercentageChange] = useState(null); // 漲跌百分比\n  // 要订阅的账户地址\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\";\n\n  // 使用 useCallback 定义处理连接状态更新的函数，避免不必要的重新渲染\n  const handleConnectionStatus = useCallback(status => {\n    setConnectionStatus(status);\n  }, []);\n\n  // 定义处理连接结果更新的函数\n  const handleConnectionResult = useCallback(status => {\n    setConnectionResult(status);\n  }, []);\n\n  // 定义处理新消息的函数，更新消息列表\n  const handleNewMessage = useCallback(message => {\n    const newBalance = parseFloat(message.split(\"餘額: \")[1].split(\" $SOL\")[0]); // 取得新餘額\n\n    if (previousBalance !== null) {\n      const change = (newBalance - previousBalance) / previousBalance * 100;\n      setPercentageChange(change.toFixed(2));\n    }\n    setPreviousBalance(newBalance);\n    setSolBalance(newBalance);\n  }, [previousBalance]);\n\n  // 定义处理 SPL 代币余额更新的函数，解析 JSON 字符串并存储为对象数组\n  const handleSPLbalance = useCallback(balances => {\n    setSplBalances(JSON.parse(balances)); // 将 JSON 字符串解析为对象数组\n  }, []);\n\n  // 返回要渲染的 JSX 元素\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"WebSocket \\u72C0\\u614B: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WebSocketComponent, {\n      onConnectionStatus: handleConnectionStatus,\n      account: account,\n      onMessageReceived: handleNewMessage,\n      onConnectionResult: handleConnectionResult,\n      onSPLbalance: handleSPLbalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-co\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [account, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\u6700\\u65B0\\u7ED3\\u679C: \", connectionResult]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u63A5\\u6536\\u5230\\u7684\\u6D88\\u606F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"SOL \\u9918\\u984D: \", solBalance, \" $SOL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), percentageChange !== null && /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: percentageChange > 0 ? 'green' : 'red'\n            },\n            children: [\"\\u6F32\\u8DCC: \", percentageChange, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_right\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: splBalances.map((token, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"TOKEN \\u5408\\u7D04\\u5730\\u5740: \", token.mint, \" - \\u9322\\u5305\\u9918\\u984D: \", token.balance, \" //\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n// 导出 App 组件\n_s(App, \"QpfdqKQSfy/TfEqw2tLEpmOX9as=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","WebSocketComponent","Buffer","jsxDEV","_jsxDEV","window","App","_s","connectionResult","setConnectionResult","connectionStatus","setConnectionStatus","messages","setMessages","splBalances","setSplBalances","previousBalance","setPreviousBalance","solBalance","setSolBalance","percentageChange","setPercentageChange","account","handleConnectionStatus","status","handleConnectionResult","handleNewMessage","message","newBalance","parseFloat","split","change","toFixed","handleSPLbalance","balances","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onConnectionStatus","onMessageReceived","onConnectionResult","onSPLbalance","style","color","map","token","index","mint","balance","_c","$RefreshReg$"],"sources":["C:/monitor_sol_web/solactrackmap/src/App.js"],"sourcesContent":["// 导入 React 及其必要的钩子函数\r\nimport React, { useState, useCallback } from 'react';\r\n// 导入样式表\r\nimport './App.css';\r\n// 导入自定义的 WebSocket 组件\r\nimport WebSocketComponent from './WebSocketComponent';\r\n// 导入 buffer 包并在浏览器环境中 polyfill Buffer\r\nimport { Buffer } from 'buffer';\r\nwindow.Buffer = Buffer;\r\n\r\n// 定义主组件 App\r\nconst App = () => {\r\n  // 定义状态变量，用于存储连接结果，初始值为 \"None\"\r\n  const [connectionResult, setConnectionResult] = useState(\"None\");\r\n\r\n  // 定义状态变量，用于存储连接状态，初始值为 \"Disconnected\"\r\n  const [connectionStatus, setConnectionStatus] = useState(\"Disconnected\");\r\n\r\n  // 定义状态变量，用于存储接收到的消息，初始为空数组\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  // 定义状态变量，用于存储 SPL 代币余额，初始为空数组\r\n  const [splBalances, setSplBalances] = useState([]);\r\n  const [previousBalance, setPreviousBalance] = useState(null); // 上一個餘額\r\n  const [solBalance, setSolBalance] = useState(null); // 當前 SOL 餘額\r\n  const [percentageChange, setPercentageChange] = useState(null); // 漲跌百分比\r\n  // 要订阅的账户地址\r\n  const account = \"GShiMwUiqpWfxyVxVnYo96upwQekeFVNrtMQT4aSH2RT\"\r\n\r\n  // 使用 useCallback 定义处理连接状态更新的函数，避免不必要的重新渲染\r\n  const handleConnectionStatus = useCallback((status) => {\r\n    setConnectionStatus(status);\r\n  }, []);\r\n  \r\n  // 定义处理连接结果更新的函数\r\n  const handleConnectionResult = useCallback((status) => {\r\n    setConnectionResult(status);\r\n  }, []);\r\n  \r\n  // 定义处理新消息的函数，更新消息列表\r\n  const handleNewMessage = useCallback((message) => {\r\n    const newBalance = parseFloat(message.split(\"餘額: \")[1].split(\" $SOL\")[0]); // 取得新餘額\r\n\r\n    if (previousBalance !== null) {\r\n      const change = ((newBalance - previousBalance) / previousBalance) * 100;\r\n      setPercentageChange(change.toFixed(2));\r\n    }\r\n\r\n    setPreviousBalance(newBalance);\r\n    setSolBalance(newBalance);\r\n  }, [previousBalance]);\r\n  \r\n  // 定义处理 SPL 代币余额更新的函数，解析 JSON 字符串并存储为对象数组\r\n  const handleSPLbalance = useCallback((balances) => {\r\n    setSplBalances(JSON.parse(balances)); // 将 JSON 字符串解析为对象数组\r\n  }, []);\r\n\r\n  // 返回要渲染的 JSX 元素\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* 显示 WebSocket 的连接状态 */}\r\n        <h2>WebSocket 狀態: {connectionStatus}</h2>\r\n      </header>\r\n      {/* 引入 WebSocketComponent 组件，并传递必要的属性 */}\r\n      <WebSocketComponent \r\n        onConnectionStatus={handleConnectionStatus} \r\n        account={account} \r\n        onMessageReceived={handleNewMessage} \r\n        onConnectionResult={handleConnectionResult}\r\n        onSPLbalance={handleSPLbalance}\r\n      />\r\n      {/* 主体内容 */}\r\n      <div className='dashboard-co'>\r\n        {/* 显示账户地址 */}\r\n        <h2>{account}:</h2>\r\n        {/* 显示最新的连接结果 */}\r\n        <h4>最新结果: {connectionResult}</h4>\r\n        <h3>接收到的消息:</h3>\r\n        <div className='dashboard-bottom-container'>\r\n          {/* 左侧消息列表 */}\r\n          <div className='dashboard_left'>\r\n            <h3>SOL 餘額: {solBalance} $SOL</h3>\r\n            {percentageChange !== null && (\r\n              <h4 style={{ color: percentageChange > 0 ? 'green' : 'red' }}>\r\n                漲跌: {percentageChange}%\r\n              </h4>\r\n            )}\r\n          </div>\r\n          {/* 右侧 SPL 代币余额列表 */}\r\n          <div className='dashboard_right'>\r\n            <ul>\r\n              {splBalances.map((token, index) => (\r\n                <li key={index}>\r\n                  TOKEN 合約地址: {token.mint} - 錢包餘額: {token.balance} // \r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 导出 App 组件\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}